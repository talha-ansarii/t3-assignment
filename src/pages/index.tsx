import type { NextPage } from "next";
import { useSession, signIn, signOut } from "next-auth/react";
import Head from "next/head";
import { trpc } from "../utils/trpc";
import { useForm } from "react-hook-form";
import { useRouter } from "next/router";

const Home: NextPage = () => {
  const router = useRouter();

  // Fetch session data for user authentication status
  const { data: session } = useSession();

  // TRPC Mutation for changing the user's password
  const { mutate: changePassword, isLoading, isError, error } = trpc.useMutation(["user.changePassword"], {
    onSuccess: () => alert("Password changed!"),
  });

  // Define form data type for password change form
  type ChangePassword = {
    password: string;
  };

  // React Hook Form setup for password form
  const { register, handleSubmit } = useForm<ChangePassword>();
  const onSubmitChangePassword = handleSubmit((data) => changePassword(data));

  return (
    <>
      <Head>
        <title>T3 - Assignment</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="w-full flex justify-between min-h-screen">
        {/* Left Section: Welcome message and password update form */}
        <div className="w-1/2 bg-gray-200 flex justify-center items-center flex-col">
          <div>
            {session?.user ? (
              <div className="flex flex-col justify-center items-center">
                <h1 className="text-2xl text-center font-bold">
                  Hello, {session.user?.name}
                </h1>
                <div className="mt-5 border-2 p-5 flex flex-col justify-center">
                  <h1>
                    You can add a password if you signed in with Google, or change your current password!
                  </h1>
                  <form
                    className="flex mt-2 justify-center items-center gap-3"
                    onSubmit={onSubmitChangePassword}
                  >
                    <input
                      type="password"
                      className="rounded-md border-2 px-1 text-md py-1"
                      placeholder="New password"
                      {...register("password")}
                    />
                    <input
                      className="bg-black rounded-md shadow-md hover:bg-gray-200 transition-all duration-300 hover:text-black text-sm hover:border hover:border-black text-white px-3 py-3 cursor-pointer"
                      type="submit"
                      value={isLoading ? "Changing password..." : "Change Password"}
                    />
                  </form>
                    <div className="text-center">
                    
                      {isError && <p className="text-red-500 text-sm">{error?.message}</p>}

                    </div>
                </div>
              </div>
            ) : (
              <div>
                <h1 className="text-3xl font-bold">Welcome to the T3 Assignment</h1>
                <h1 className="text-xl font-semibold mt-2">Sign Up or Sign In to see the content</h1>
              </div>
            )}
          </div>
        </div>

        {/* Right Section: Authentication and Sign Out */}
        <div className="w-1/2 bg-gray-200 flex flex-col justify-center">
          <div className="rounded-l-3xl shadow-md bg-black/80 w-full h-screen flex flex-col justify-center items-center">
            <h1 className="text-white text-3xl font-bold">
              Authenticate and sign out here!
            </h1>
            <div className="mt-2">
              {session ? (
                <button
                  onClick={() => signOut()}
                  className="bg-black rounded-md shadow-md hover:bg-gray-200 transition-all duration-300 hover:text-black hover:border-black text-white px-3 py-3 mt-2"
                >
                  Sign Out - {session.user?.name}
                </button>
              ) : (
                <div className="flex w-full gap-2">
                  <button
                    onClick={() => router.push("/signup")}
                    className="bg-black rounded-md shadow-md hover:bg-gray-200 transition-all duration-300 hover:text-black hover:border-black text-white px-3 py-3 mt-2"
                  >
                    Sign Up
                  </button>
                  <button
                    onClick={() => signIn()}
                    className="bg-black rounded-md shadow-md hover:bg-gray-200 transition-all duration-300 hover:text-black hover:border-black text-white px-3 py-3 mt-2"
                  >
                    Sign In
                  </button>
                </div>
              )}
            </div>
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
